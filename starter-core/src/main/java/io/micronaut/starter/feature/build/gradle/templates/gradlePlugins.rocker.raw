@import io.micronaut.starter.options.TestFramework
@import io.micronaut.starter.application.Project
@import io.micronaut.starter.feature.Features
@import io.micronaut.starter.util.VersionInfo
@import io.micronaut.starter.feature.build.gradle.templates.dependency
@import io.micronaut.starter.feature.database.JpaFeature
@import io.micronaut.starter.application.ApplicationType
@import java.util.List
@import io.micronaut.starter.build.gradle.GradlePlugin
@import io.micronaut.starter.build.gradle.CommunityGradlePlugin
@import io.micronaut.starter.build.gradle.CoreGradlePlugin

@args (
ApplicationType applicationType,
Project project,
Features features,
List<GradlePlugin> plugins
)

plugins {
@if (features.language().isKotlin() || features.testFramework().isKotlinTestFramework()) {
    id("org.jetbrains.kotlin.jvm") version "1.4.10"
    id("org.jetbrains.kotlin.kapt") version "1.4.10"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.4.10"
    @if (features.isFeaturePresent(JpaFeature.class)) {
    id("org.jetbrains.kotlin.plugin.jpa") version "1.4.10"
    }
}
@for (GradlePlugin gradlePlugin : plugins) {
    @if (gradlePlugin instanceof CommunityGradlePlugin) {
        id("@gradlePlugin.getId()") version "@(((CommunityGradlePlugin)gradlePlugin).getVersion())"
    } else if (gradlePlugin instanceof CoreGradlePlugin) {
        id("@gradlePlugin.getId()")
    }
}
}